# copy from https://nuxt.com/deploy/github-pages

# https://github.com/actions/deploy-pages#usage
name: Deploy to GitHub Pages
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: corepack enable
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      # Pick your own package manager and build script
      - run: npm install
      - name: Generate Nuxt static files
        run: npx nuxt generate --preset github_pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./.output/public

  # Deployment job
  deploy:
    # Add a dependency to the build job
    needs: build
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source
    # Deploy to the github_pages environment
    environment:
      name: github_pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  # upload-to-s3:
  #   needs: build # buildジョブが完了してから実行される
  #   runs-on: ubuntu-latest

  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     # GitHub Pages用アーティファクトをダウンロード
  #     - name: Download GitHub Pages Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: github-pages # actions/upload-pages-artifactのデフォルト名

  #     # アーティファクトの解凍
  #     - name: Extract artifact
  #       run: |
  #         mkdir .output
  #         tar -xf ./artifact.tar -C .output

  #     - name: List extracted files
  #       run: ls -R .output

  #     # AWS CLI をセットアップ
  #     - name: Setup AWS CLI
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-northeast-1

  #     # S3 にアップロード
  #     - name: Upload to S3
  #       run: |
  #         aws s3 cp .output s3://zzz.teracy.link/ --recursive
